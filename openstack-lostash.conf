input {
    redis {
       host => "127.0.0.1"
       type => "redis-input"
       data_type => "list"
       key => "logstash"
          }
    beats {
       port => 5044
       ssl => true
       ssl_certificate => "/etc/pki/tls/certs/logstash-forwarder.crt"
       ssl_key => "/etc/pki/tls/private/logstash-forwarder.key"
          }

      }



filter {

                     
     if [message] =~ /^[\s]*$/  {
                  drop { }
         }

      if [fields][log_type] == "nova"  {


        multiline {
#               patterns_dir => "../patterns"
#               pattern => "%{TIMESTAMP_ISO8601:date_time} %{LOGLEVEL:loglevel} %{SYSLOGPROG:component} %{REQUEST_ID:requestid} %{DATA:content}"
              pattern => "%{TIMESTAMP_ISO8601:date_time} %{LOGLEVEL:loglevel} %{SYSLOGPROG:component} %{DATA:content}"
               negate => true
               what => "previous"
             }

        grok  {
#               patterns_dir => "../patterns"
               match => [ "message", "%{TIMESTAMP_ISO8601:date_time} %{LOGLEVEL:loglevel} %{SYSLOGPROG:component} %{REQUEST_ID:requestid} %{GREEDYDATA:content}" ]
            }
    
       }

#     if [fields][log_type] == "glance"  {
#       grok  {
#               patterns_dir => "../patterns"
#               match => [ "message", "%{TIMESTAMP_ISO8601:date_time} %{NUMBER:process_id} %{LOGLEVEL:loglevel} %{SYSLOGPROG:component} %{REQUEST_ID:request_id} %{GREEDYDATA:content}" ]

#            }
#       }

#    if [fields][log_type] == "cinder"   {
#       grok {
#             patterns_dir => "../patterns"
#             match => [ "message", "%{TIMESTAMP_ISO8601:date_time} %{LOGLEVEL:loglevel} %{SYSLOGPROG:component} %{REQUEST_ID:request_id} %{GREEDYDATA:content}" ]

            
#            }
#      }

#    if [fields][log_type] == "neutron"  {
#       grok  {
#             patterns_dir => "../patterns"
#             match => [ "message", "%{TIMESTAMP_ISO8601:date_time} %{LOGLEVEL:loglevel} %{SYSLOGPROG:component} %{REQUEST_ID:request_id} %{GREEDYDATA:content}" ]
#            }
#      }
  

}
               
output {

 stdout { codec => rubydebug }

 if "ERROR" in [message]  {
    email  {
     port           =>    "25"
     address        =>    "smtp.cdac.in"
     username       =>    "dharmalingams"
     password       =>    "iamcool06**"
#     authentication =>    "plain"
#     use_tls        =>    true
     from           =>    "Support-Meghdoot@cdac.in"
     subject        =>    "Meghdoot-OpenStack alert"
     to             =>    "cooldharma06@gmail.com"
     via            =>    "smtp"
#    body           =>    "COOL 06... :) Here is the event line that occured: %{message}"
     htmlbody       =>    "<p>Dear Meghdoot-OpenStack Team,</p><p>In your setup, the following error got Triggered.:</p><p><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;%{message}</strong></p><p>regards,</p><p>Support - Meghdoot Openstack team.</p>"
		}
    }

  elasticsearch {
    hosts => ["localhost:9200"]
    sniffing => true
    manage_template => false
    index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
    document_type => "%{[@metadata][type]}"
  }

}
